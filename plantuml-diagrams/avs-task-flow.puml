@startuml avs-task-flow

' Basic styling
!theme plain
skinparam backgroundColor white
skinparam defaultTextAlignment center

' Explicitly disable handwritten mode
skinparam handwritten false
skinparam shadowing false
skinparam roundCorner 0

' Force straight lines
skinparam linetype ortho
skinparam ParticipantPadding 20
skinparam SequenceBoxPadding 10

' Make sure lines and fonts are crisp
skinparam ArrowColor black
skinparam ArrowThickness 1.5

' Define entity styles for different components
skinparam participant {
  BackgroundColor white
  BorderColor black
}

' Define stereotypes and colors for different entity types
skinparam participantBackgroundColor<<Contract>> #FADBD8
skinparam participantBorderColor<<Contract>> #943126

skinparam participantBackgroundColor<<Queue>> #FCF3CF
skinparam participantBorderColor<<Queue>> #B7950B

skinparam participantBackgroundColor<<Operator>> #D6EAF8
skinparam participantBorderColor<<Operator>> #2E86C1

skinparam participantBackgroundColor<<Evaluator>> #D4EFDF
skinparam participantBorderColor<<Evaluator>> #196F3D

skinparam participantBackgroundColor<<Storage>> #F5EEF8
skinparam participantBorderColor<<Storage>> #76448A

skinparam participantBackgroundColor<<External>> #EDEDED
skinparam participantBorderColor<<External>> #616A6B

skinparam participantBackgroundColor<<API>> #EBF5FB
skinparam participantBorderColor<<API>> #3498DB

title Task Creation and Assignment Flow

actor Admin
participant "EvalAvsTaskManager" as TaskManager <<Contract>>
participant "Assignment Queue" as Queue <<Queue>>
participant "Operator" as Operator <<Operator>>
participant "GoEvaluator" as GoEvaluator <<Evaluator>>
participant "Dataset Registry (S3)" as S3 <<Storage>>
participant "LLM Provider" as LLM <<External>>
participant "LayerLens API" as API <<API>>

' Add legend
legend right
  |= Entity Type |= Description |
  |<#FADBD8>| Contract | Smart Contracts |
  |<#FCF3CF>| Queue | Message Queues |
  |<#D6EAF8>| Operator | Validator Nodes |
  |<#D4EFDF>| Evaluator | Evaluation Services |
  |<#F5EEF8>| Storage | Data Storage Services |
  |<#EDEDED>| External | 3rd Party Services |
  |<#EBF5FB>| API | Backend APIs |
endlegend

note over Admin, API: Task Creation and Assignment

Admin -> TaskManager: requestEval(modelName, datasetName, subsets)
activate TaskManager
TaskManager -> Queue: popNextAssignedOperator()
Queue --> TaskManager: assignedOperator
TaskManager -> TaskManager: Create EvalAvsTask
TaskManager -> TaskManager: Emit EvalRequested Event
deactivate TaskManager

Operator -> Operator: Listen for EvalRequested events
TaskManager -> Operator: EvalRequested(taskId, task, externalId)

note over Operator, API: Task Execution

Operator -> Operator: Check if assigned to task
activate Operator
Operator -> S3: Fetch dataset files (formatted.jsonl + config)
S3 --> Operator: Return dataset files
Operator -> API: Request API Key for model provider
API --> Operator: Return API Key
Operator -> GoEvaluator: Execute evaluation

activate GoEvaluator
loop For each prompt in dataset
    GoEvaluator -> LLM: Send prompt
    LLM --> GoEvaluator: Return response
    GoEvaluator -> GoEvaluator: Score response
    GoEvaluator -> GoEvaluator: Hash response (MD5)
end
GoEvaluator -> GoEvaluator: Generate combined hash
GoEvaluator --> Operator: Return results and hash
deactivate GoEvaluator

Operator -> API: Save detailed results
API --> Operator: Confirm save

note over Operator, API: Result Submission

Operator -> Operator: Generate BLS signature
Operator -> TaskManager: respondToEvalRequest(taskId, hash, signature)
activate TaskManager
TaskManager -> TaskManager: Verify signature
TaskManager -> TaskManager: Update task state to SUBMITTED
TaskManager -> Queue: Add operator back to queue
TaskManager -> TaskManager: Emit EvalCompleted Event
deactivate TaskManager
deactivate Operator
@enduml