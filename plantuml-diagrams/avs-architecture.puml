@startuml avs-architecture

' Basic styling
!theme plain
skinparam componentStyle rectangle
skinparam backgroundColor white
skinparam defaultTextAlignment center

' Explicitly disable handwritten mode
skinparam handwritten false
skinparam shadowing false
skinparam roundCorner 0

' Set linetype to ortho for straight lines
skinparam linetype ortho
skinparam nodesep 50
skinparam ranksep 50

' Make sure lines and fonts are crisp
skinparam ArrowColor black
skinparam ArrowThickness 1.5

' Add spacing to prevent cutoff
scale 800 width

title Evaluation AVS Architecture

package "Smart Contracts Layer" {
  [EvalAvsServiceManager] as ServiceManager #lightblue
  [EvalAvsTaskManager] as TaskManager #lightblue
  [BlsRegistryCoordinator] as BLSRegistry #lightblue
  [StakeRegistry] as StakeRegistry #lightblue
}

package "Operator Layer" {
  [Operator Service] as OpService #lightgreen
  [Operator CLI] as OpCLI #lightgreen
  [Task Queue] as TaskQueue #lightgreen
  [BLS Signing Module] as BlsSigner #lightgreen
  [Config Manager] as ConfigMgr #lightgreen
  
  component "Go Evaluator" as GoEval #lightyellow {
    [Model Client Factory] as ModelFactory
    [Response Scorer] as Scorer
    [Result Processor] as Processor
    [Metrics Collector] as Metrics
  }
}

package "Infrastructure Layer" {
  [Docker Container] as Docker #pink
  [Monitoring Agent] as Monitor #pink
  [Health Checker] as Health #pink
  [Slashing Detector] as Slashing #pink
}

cloud "External Services" {
  [EigenLayer Core] as EigenLayer #lavender
  [Dataset Registry (S3)] as S3 #lavender
  [LLM API Providers] as LLM #lavender
  [LayerLens API] as LayerLensAPI #lavender
}

' Contract interactions
ServiceManager -- BLSRegistry
TaskManager -- ServiceManager
StakeRegistry -- ServiceManager
BLSRegistry -- EigenLayer
StakeRegistry -- EigenLayer

' Operator components
OpService -- TaskQueue
OpService -- BlsSigner
OpService -- ConfigMgr
OpService -- GoEval
OpCLI -- OpService
OpCLI -- ConfigMgr
ModelFactory -- LLM
GoEval -- Processor
GoEval -- Scorer
GoEval -- Metrics
Processor -- LayerLensAPI

' Infrastructure
Docker -- OpService
Monitor -- OpService
Monitor -- Health
Monitor -- Slashing
Slashing -- EigenLayer

' External connections
OpService -- TaskManager
OpService -- S3
TaskManager -- LayerLensAPI

@enduml