@startuml
' Use handwritten style with more readable layout
skinparam componentStyle rectangle
skinparam backgroundColor white
skinparam handwritten true
skinparam defaultTextAlignment center
skinparam wrapWidth 200
skinparam nodesep 120
skinparam ranksep 130

' Increase overall diagram size
scale 1.2

' Fix arrow styling
skinparam ArrowColor black
skinparam ArrowThickness 1.5
skinparam ArrowFontColor black
skinparam ArrowFontSize 14

' Improve fonts and text
skinparam ComponentFontSize 16
skinparam ComponentFontStyle bold
skinparam PackageFontSize 18
skinparam PackageFontStyle bold
skinparam TitleFontSize 24
skinparam TitleFontStyle bold

title Evaluation AVS Architecture

package "Smart Contracts Layer" {
  [EvalAvsServiceManager] as ServiceManager #lightblue
  [EvalAvsTaskManager] as TaskManager #lightblue
  [BlsRegistryCoordinator] as BLSRegistry #lightblue
  [StakeRegistry] as StakeRegistry #lightblue
}

package "Operator Layer" {
  [Operator Service] as OpService #lightgreen
  [Operator CLI] as OpCLI #lightgreen
  [Task Queue] as TaskQueue #lightgreen
  [BLS Signing Module] as BlsSigner #lightgreen
  [Config Manager] as ConfigMgr #lightgreen
  
  component "Go Evaluator" as GoEval #lightyellow {
    [Model Client Factory] as ModelFactory
    [Response Scorer] as Scorer
    [Result Processor] as Processor
    [Metrics Collector] as Metrics
  }
}

package "Infrastructure Layer" {
  [Docker Container] as Docker #pink
  [Monitoring Agent] as Monitor #pink
  [Health Checker] as Health #pink
  [Slashing Detector] as Slashing #pink
}

cloud "External Services" {
  [EigenLayer Core] as EigenLayer #lavender
  [Dataset Registry (S3)] as S3 #lavender
  [LLM API Providers] as LLM #lavender
  [LayerLens API] as LayerLensAPI #lavender
}

' Contract interactions
ServiceManager -> BLSRegistry
TaskManager -> ServiceManager
StakeRegistry -> ServiceManager
BLSRegistry -> EigenLayer
StakeRegistry -> EigenLayer

' Operator components
OpService -> TaskQueue
OpService -> BlsSigner
OpService -> ConfigMgr
OpService -> GoEval
OpCLI -> OpService
OpCLI -> ConfigMgr
ModelFactory -> LLM
GoEval -> Processor
GoEval -> Scorer
GoEval -> Metrics
Processor -> LayerLensAPI

' Infrastructure
Docker -> OpService
Monitor -> OpService
Monitor -> Health
Monitor -> Slashing
Slashing -> EigenLayer

' External connections
OpService -> TaskManager
OpService -> S3
TaskManager -> LayerLensAPI

@enduml