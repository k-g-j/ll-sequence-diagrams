@startuml
' Use handwritten style with more readable layout
skinparam componentStyle rectangle
skinparam backgroundColor white
skinparam handwritten true
skinparam defaultTextAlignment center
skinparam wrapWidth 200
skinparam nodesep 120
skinparam ranksep 130

' Increase overall diagram size
scale 1.2

' Fix arrow styling
skinparam ArrowColor black
skinparam ArrowThickness 1.5
skinparam ArrowFontColor black
skinparam ArrowFontSize 14

' Improve fonts and text
skinparam ComponentFontSize 16
skinparam ComponentFontStyle bold
skinparam PackageFontSize 18
skinparam PackageFontStyle bold
skinparam TitleFontSize 24
skinparam TitleFontStyle bold

title LayerLens Atlas App Architecture

package "User Interface Layer" {
  [Atlas Web UI] as WebUI #lightblue
  [Next.js App] as NextApp #lightblue
  [Authentication Module] as Auth #lightblue
  [Results Visualization] as Viz #lightblue
}

package "API Layer" {
  [API Gateway] as ApiGw #lightgreen
  [Go Backend API] as GoBackend #lightgreen
  [WebSocket Service] as WebSocket #lightgreen
  [Rate Limiter] as RateLim #lightgreen
}

package "Core Services" {
  [Evaluation Manager] as EvalManager #lightyellow
  [Model Registry] as ModelRegistry #lightyellow
  [Dataset Manager] as DatasetManager #lightyellow
  [User Manager] as UserManager #lightyellow
  [Results Processor] as ResultsProcessor #lightyellow
}

package "Integration Layer" {
  [Evaluation Worker] as Worker #pink
  [Smart Contract Client] as ContractClient #pink
  [Metrics Collector] as MetricsCollector #pink
}

package "Data Layer" {
  database "MongoDB" as MongoDB #lightgray {
    [Evaluations] as MongoEvals
    [Users] as MongoUsers
    [Datasets] as MongoDsets
  }
  
  database "MariaDB" as MariaDB #lightgray {
    [Aggregated Metrics] as MetricsDB
    [Historical Data] as HistoryDB
  }
  
  database "AWS S3" as S3 #lightgray {
    [Results Storage] as ResultsS3
    [Dataset Files] as DatasetsS3
  }
  
  queue "Message Queue" as Queue #lightgray
}

cloud "External Services" {
  [AWS Cognito] as Cognito #lavender
  [LayerLens AVS] as AVS #lavender
  [LLM Providers] as LLMs #lavender
}

' User interactions
WebUI -> NextApp
NextApp -> Auth
NextApp -> Viz
NextApp -> ApiGw

' API interactions
Auth -> Cognito
ApiGw -> GoBackend
ApiGw -> WebSocket
ApiGw -> RateLim

' Core service connections
GoBackend -> EvalManager
GoBackend -> ModelRegistry
GoBackend -> DatasetManager
GoBackend -> UserManager
GoBackend -> ResultsProcessor

' Data connections
EvalManager -> MongoEvals
ModelRegistry -> MongoEvals
DatasetManager -> MongoDsets
UserManager -> MongoUsers
ResultsProcessor -> MetricsDB
ResultsProcessor -> HistoryDB

' Integration connections
EvalManager -> Queue
Queue -> Worker
Worker -> ContractClient
Worker -> ResultsProcessor
ContractClient -> AVS
MetricsCollector -> LLMs
MetricsCollector -> MetricsDB

' Storage connections
DatasetManager -> DatasetsS3
ResultsProcessor -> ResultsS3

@enduml